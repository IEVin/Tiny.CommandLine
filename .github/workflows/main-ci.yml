name: main-ci
on: [push, pull_request]

jobs:

  build:
    name: Build-Publish
    runs-on: ubuntu-latest

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      VERSION_OVERRIDE: '0.1.0'

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Publish nuget
      run: dotnet build -c Release ./src/Tiny.CommandLine -p:VersionOverride=${{ env.VERSION_OVERRIDE }}

    - name: Publish source
      shell: pwsh
      run: ./scripts/publish_source.ps1

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: build/publish

  test:
    needs: build

    strategy:
      fail-fast: false
      matrix:
        include:
          - dotnet: '2.1.x'
            target: 'netcoreapp2.1'
            type: source

          - dotnet: '6.0.x'
            target: 'net6.0'
            type: source

          - dotnet: '2.0.x'
            target: 'netcoreapp2.0'
            type: nuget

          - dotnet: '6.0.x'
            target: 'net6.0'
            type: nuget

    name: Test ${{ matrix.type }} ${{ matrix.target }}
    runs-on: ubuntu-18.04
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: artifacts
        path: build/publish

    - name: Add nuget package
      if: ${{ matrix.type == 'nuget' }}
      shell: pwsh
      run: ./scripts/test_add_nuget.ps1

    - name: Add composed source
      if: ${{ matrix.type == 'source' }}
      shell: pwsh
      run: ./scripts/test_add_source.ps1

    - name: Test
      run: dotnet test -c Release src/Tests -p:TargetFrameworks=${{ matrix.target }}
